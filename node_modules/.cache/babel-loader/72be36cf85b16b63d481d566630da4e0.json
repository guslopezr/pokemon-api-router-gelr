{"ast":null,"code":"import * as React from \"react\";\n/** @internal */\n\nexport function getRenderStateEx(layout, node, iconFactory, titleFactory) {\n  var leadingContent = iconFactory ? iconFactory(node) : undefined;\n  var titleContent = node.getName();\n  var name = node.getName();\n\n  function isTitleObject(obj) {\n    return obj.titleContent !== undefined;\n  }\n\n  if (titleFactory !== undefined) {\n    var titleObj = titleFactory(node);\n\n    if (titleObj !== undefined) {\n      if (typeof titleObj === \"string\") {\n        titleContent = titleObj;\n        name = titleObj;\n      } else if (isTitleObject(titleObj)) {\n        titleContent = titleObj.titleContent;\n        name = titleObj.name;\n      } else {\n        titleContent = titleObj;\n      }\n    }\n  }\n\n  if (leadingContent === undefined && node.getIcon() !== undefined) {\n    leadingContent = React.createElement(\"img\", {\n      style: {\n        width: \"1em\",\n        height: \"1em\"\n      },\n      src: node.getIcon(),\n      alt: \"leadingContent\"\n    });\n  }\n\n  var buttons = []; // allow customization of leading contents (icon) and contents\n\n  var renderState = {\n    leading: leadingContent,\n    content: titleContent,\n    name: name,\n    buttons: buttons\n  };\n  layout.customizeTab(node, renderState);\n\n  node._setRenderedName(renderState.name);\n\n  return renderState;\n}\n/** @internal */\n\nexport function hideElement(style, useVisibility) {\n  if (useVisibility) {\n    style.visibility = \"hidden\";\n  } else {\n    style.display = \"none\";\n  }\n}\n/** @internal */\n\nexport function isAuxMouseEvent(event) {\n  var auxEvent = false;\n\n  if (event.nativeEvent instanceof MouseEvent) {\n    if (event.nativeEvent.button !== 0 || event.ctrlKey || event.altKey || event.metaKey || event.shiftKey) {\n      auxEvent = true;\n    }\n  }\n\n  return auxEvent;\n}","map":null,"metadata":{},"sourceType":"module"}