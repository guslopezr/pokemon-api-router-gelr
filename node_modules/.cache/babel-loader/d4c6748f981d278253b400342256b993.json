{"ast":null,"code":"import _classCallCheck from \"/Users/gustavolopez/Documents/Personal GLR/Curso Desafio Latam/MOD REACT 7 ROUTER 2/poke-api router gelr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gustavolopez/Documents/Personal GLR/Curso Desafio Latam/MOD REACT 7 ROUTER 2/poke-api router gelr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Orientation } from \"./Orientation\";\nimport { Rect } from \"./Rect\";\nexport var DockLocation = /*#__PURE__*/function () {\n  /** @internal */\n  function DockLocation(name, orientation, indexPlus) {\n    _classCallCheck(this, DockLocation);\n\n    this._name = name;\n    this._orientation = orientation;\n    this._indexPlus = indexPlus;\n    DockLocation.values[this._name] = this;\n  }\n  /** @internal */\n\n\n  _createClass(DockLocation, [{\n    key: \"getName\",\n    value: function getName() {\n      return this._name;\n    }\n  }, {\n    key: \"getOrientation\",\n    value: function getOrientation() {\n      return this._orientation;\n    }\n    /** @internal */\n\n  }, {\n    key: \"getDockRect\",\n    value: function getDockRect(r) {\n      if (this === DockLocation.TOP) {\n        return new Rect(r.x, r.y, r.width, r.height / 2);\n      } else if (this === DockLocation.BOTTOM) {\n        return new Rect(r.x, r.getBottom() - r.height / 2, r.width, r.height / 2);\n      }\n\n      if (this === DockLocation.LEFT) {\n        return new Rect(r.x, r.y, r.width / 2, r.height);\n      } else if (this === DockLocation.RIGHT) {\n        return new Rect(r.getRight() - r.width / 2, r.y, r.width / 2, r.height);\n      } else {\n        return r.clone();\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"split\",\n    value: function split(rect, size) {\n      if (this === DockLocation.TOP) {\n        var r1 = new Rect(rect.x, rect.y, rect.width, size);\n        var r2 = new Rect(rect.x, rect.y + size, rect.width, rect.height - size);\n        return {\n          start: r1,\n          end: r2\n        };\n      } else if (this === DockLocation.LEFT) {\n        var _r = new Rect(rect.x, rect.y, size, rect.height);\n\n        var _r2 = new Rect(rect.x + size, rect.y, rect.width - size, rect.height);\n\n        return {\n          start: _r,\n          end: _r2\n        };\n      }\n\n      if (this === DockLocation.RIGHT) {\n        var _r3 = new Rect(rect.getRight() - size, rect.y, size, rect.height);\n\n        var _r4 = new Rect(rect.x, rect.y, rect.width - size, rect.height);\n\n        return {\n          start: _r3,\n          end: _r4\n        };\n      } else {\n        // if (this === DockLocation.BOTTOM) {\n        var _r5 = new Rect(rect.x, rect.getBottom() - size, rect.width, size);\n\n        var _r6 = new Rect(rect.x, rect.y, rect.width, rect.height - size);\n\n        return {\n          start: _r5,\n          end: _r6\n        };\n      }\n    }\n    /** @internal */\n\n  }, {\n    key: \"reflect\",\n    value: function reflect() {\n      if (this === DockLocation.TOP) {\n        return DockLocation.BOTTOM;\n      } else if (this === DockLocation.LEFT) {\n        return DockLocation.RIGHT;\n      }\n\n      if (this === DockLocation.RIGHT) {\n        return DockLocation.LEFT;\n      } else {\n        // if (this === DockLocation.BOTTOM) {\n        return DockLocation.TOP;\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"(DockLocation: name=\" + this._name + \", orientation=\" + this._orientation + \")\";\n    }\n  }], [{\n    key: \"getByName\",\n    value: function getByName(name) {\n      return DockLocation.values[name];\n    }\n    /** @internal */\n\n  }, {\n    key: \"getLocation\",\n    value: function getLocation(rect, x, y) {\n      x = (x - rect.x) / rect.width;\n      y = (y - rect.y) / rect.height;\n\n      if (x >= 0.25 && x < 0.75 && y >= 0.25 && y < 0.75) {\n        return DockLocation.CENTER;\n      } // Whether or not the point is in the bottom-left half of the rect\n      // +-----+\n      // |\\    |\n      // |x\\   |\n      // |xx\\  |\n      // |xxx\\ |\n      // |xxxx\\|\n      // +-----+\n\n\n      var bl = y >= x; // Whether or not the point is in the bottom-right half of the rect\n      // +-----+\n      // |    /|\n      // |   /x|\n      // |  /xx|\n      // | /xxx|\n      // |/xxxx|\n      // +-----+\n\n      var br = y >= 1 - x;\n\n      if (bl) {\n        return br ? DockLocation.BOTTOM : DockLocation.LEFT;\n      } else {\n        return br ? DockLocation.RIGHT : DockLocation.TOP;\n      }\n    }\n  }]);\n\n  return DockLocation;\n}();\nDockLocation.values = {};\nDockLocation.TOP = new DockLocation(\"top\", Orientation.VERT, 0);\nDockLocation.BOTTOM = new DockLocation(\"bottom\", Orientation.VERT, 1);\nDockLocation.LEFT = new DockLocation(\"left\", Orientation.HORZ, 0);\nDockLocation.RIGHT = new DockLocation(\"right\", Orientation.HORZ, 1);\nDockLocation.CENTER = new DockLocation(\"center\", Orientation.VERT, 0);","map":null,"metadata":{},"sourceType":"module"}