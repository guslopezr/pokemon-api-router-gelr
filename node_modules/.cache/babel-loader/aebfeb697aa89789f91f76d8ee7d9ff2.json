{"ast":null,"code":"import * as React from \"react\";\nimport { Actions } from \"../model/Actions\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { CLASSES } from \"../Types\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { hideElement } from \"./Utils\";\n/** @internal */\n\nexport var TabFloating = function TabFloating(props) {\n  var layout = props.layout,\n      selected = props.selected,\n      node = props.node,\n      path = props.path;\n\n  var showPopout = function showPopout() {\n    if (node.getWindow()) {\n      node.getWindow().focus();\n    }\n  };\n\n  var dockPopout = function dockPopout() {\n    layout.doAction(Actions.unFloatTab(node.getId()));\n  };\n\n  var onMouseDown = function onMouseDown() {\n    var parent = node.getParent();\n\n    if (parent.getType() === TabSetNode.TYPE) {\n      if (!parent.isActive()) {\n        layout.doAction(Actions.setActiveTabset(parent.getId()));\n      }\n    }\n  };\n\n  var onClickFocus = function onClickFocus(event) {\n    event.preventDefault();\n    showPopout();\n  };\n\n  var onClickDock = function onClickDock(event) {\n    event.preventDefault();\n    dockPopout();\n  };\n\n  var cm = layout.getClassName;\n  var parentNode = node.getParent();\n\n  var style = node._styleWithPosition();\n\n  if (!selected) {\n    hideElement(style, node.getModel().isUseVisibility());\n  }\n\n  if (parentNode instanceof TabSetNode) {\n    if (node.getModel().getMaximizedTabset() !== undefined && !parentNode.isMaximized()) {\n      hideElement(style, node.getModel().isUseVisibility());\n    }\n  }\n\n  var message = layout.i18nName(I18nLabel.Floating_Window_Message);\n  var showMessage = layout.i18nName(I18nLabel.Floating_Window_Show_Window);\n  var dockMessage = layout.i18nName(I18nLabel.Floating_Window_Dock_Window);\n  var customRenderCallback = layout.getOnRenderFloatingTabPlaceholder();\n\n  if (customRenderCallback) {\n    return React.createElement(\"div\", {\n      className: cm(CLASSES.FLEXLAYOUT__TAB_FLOATING),\n      onMouseDown: onMouseDown,\n      onTouchStart: onMouseDown,\n      style: style\n    }, customRenderCallback(dockPopout, showPopout));\n  } else {\n    return React.createElement(\"div\", {\n      className: cm(CLASSES.FLEXLAYOUT__TAB_FLOATING),\n      \"data-layout-path\": path,\n      onMouseDown: onMouseDown,\n      onTouchStart: onMouseDown,\n      style: style\n    }, React.createElement(\"div\", {\n      className: cm(CLASSES.FLEXLAYOUT__TAB_FLOATING_INNER)\n    }, React.createElement(\"div\", null, message), React.createElement(\"div\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: onClickFocus\n    }, showMessage)), React.createElement(\"div\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: onClickDock\n    }, dockMessage))));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}