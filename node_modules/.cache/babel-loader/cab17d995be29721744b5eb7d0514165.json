{"ast":null,"code":"import _toConsumableArray from \"/Users/gustavolopez/Documents/Personal GLR/Curso Desafio Latam/MOD REACT 7 ROUTER 2/poke-api router gelr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/gustavolopez/Documents/Personal GLR/Curso Desafio Latam/MOD REACT 7 ROUTER 2/poke-api router gelr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CLASSES } from \"../Types\";\n/** @internal */\n\nexport var FloatingWindow = function FloatingWindow(props) {\n  var title = props.title,\n      id = props.id,\n      url = props.url,\n      rect = props.rect,\n      onCloseWindow = props.onCloseWindow,\n      onSetWindow = props.onSetWindow,\n      children = props.children;\n  var popoutWindow = React.useRef(null);\n  var timerId = React.useRef(null);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      content = _React$useState2[0],\n      setContent = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    if (timerId.current) {\n      clearTimeout(timerId.current);\n    }\n\n    var r = rect; // Make a local copy of the styles from the current window which will be passed into\n    // the floating window. window.document.styleSheets is mutable and we can't guarantee\n    // the styles will exist when 'popoutWindow.load' is called below.\n\n    var styles = Array.from(window.document.styleSheets).reduce(function (result, styleSheet) {\n      var rules = undefined;\n\n      try {\n        rules = styleSheet.cssRules;\n      } catch (e) {// styleSheet.cssRules can throw security exception\n      }\n\n      try {\n        return [].concat(_toConsumableArray(result), [{\n          href: styleSheet.href,\n          type: styleSheet.type,\n          rules: rules ? Array.from(rules).map(function (rule) {\n            return rule.cssText;\n          }) : null\n        }]);\n      } catch (e) {\n        return result;\n      }\n    }, []);\n    popoutWindow.current = window.open(url, id, \"left=\".concat(r.x, \",top=\").concat(r.y, \",width=\").concat(r.width, \",height=\").concat(r.height));\n\n    if (popoutWindow.current !== null) {\n      onSetWindow(id, popoutWindow.current); // listen for parent unloading to remove all popouts\n\n      window.addEventListener(\"beforeunload\", function () {\n        if (popoutWindow.current) {\n          popoutWindow.current.close();\n          popoutWindow.current = null;\n        }\n      });\n      popoutWindow.current.addEventListener(\"load\", function () {\n        var popoutDocument = popoutWindow.current.document;\n        popoutDocument.title = title;\n        var popoutContent = popoutDocument.createElement(\"div\");\n        popoutContent.className = CLASSES.FLEXLAYOUT__FLOATING_WINDOW_CONTENT;\n        popoutDocument.body.appendChild(popoutContent);\n        copyStyles(popoutDocument, styles).then(function () {\n          setContent(popoutContent);\n        }); // listen for popout unloading (needs to be after load for safari)\n\n        popoutWindow.current.addEventListener(\"beforeunload\", function () {\n          onCloseWindow(id);\n        });\n      });\n    } else {\n      console.warn(\"Unable to open window \".concat(url));\n      onCloseWindow(id);\n    }\n\n    return function () {\n      // delay so refresh will close window\n      timerId.current = setTimeout(function () {\n        if (popoutWindow.current) {\n          popoutWindow.current.close();\n          popoutWindow.current = null;\n        }\n      }, 0);\n    };\n  }, []);\n\n  if (content !== undefined) {\n    return createPortal(children, content);\n  } else {\n    return null;\n  }\n};\n/** @internal */\n\nfunction copyStyles(doc, styleSheets) {\n  var head = doc.head;\n  var promises = [];\n\n  var _iterator = _createForOfIteratorHelper(styleSheets),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var styleSheet = _step.value;\n\n      if (styleSheet.href) {\n        (function () {\n          // prefer links since they will keep paths to images etc\n          var styleElement = doc.createElement(\"link\");\n          styleElement.type = styleSheet.type;\n          styleElement.rel = \"stylesheet\";\n          styleElement.href = styleSheet.href;\n          head.appendChild(styleElement);\n          promises.push(new Promise(function (resolve, reject) {\n            styleElement.onload = function () {\n              return resolve(true);\n            };\n          }));\n        })();\n      } else {\n        if (styleSheet.rules) {\n          var style = doc.createElement(\"style\");\n\n          var _iterator2 = _createForOfIteratorHelper(styleSheet.rules),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var rule = _step2.value;\n              style.appendChild(doc.createTextNode(rule));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          head.appendChild(style);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return Promise.all(promises);\n}","map":null,"metadata":{},"sourceType":"module"}