{"ast":null,"code":"import * as React from \"react\";\nimport { DragDrop } from \"./DragDrop\";\nimport { CLASSES } from \"./Types\";\nimport { TabButtonStamp } from \"./view/TabButtonStamp\";\n/** @internal */\n\nexport function showPopup(triggerElement, items, onSelect, layout, iconFactory, titleFactory) {\n  var layoutDiv = layout.getRootDiv();\n  var classNameMapper = layout.getClassName;\n  var currentDocument = triggerElement.ownerDocument;\n  var triggerRect = triggerElement.getBoundingClientRect();\n  var layoutRect = layoutDiv.getBoundingClientRect();\n  var elm = currentDocument.createElement(\"div\");\n  elm.className = classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU_CONTAINER);\n\n  if (triggerRect.left < layoutRect.left + layoutRect.width / 2) {\n    elm.style.left = triggerRect.left - layoutRect.left + \"px\";\n  } else {\n    elm.style.right = layoutRect.right - triggerRect.right + \"px\";\n  }\n\n  if (triggerRect.top < layoutRect.top + layoutRect.height / 2) {\n    elm.style.top = triggerRect.top - layoutRect.top + \"px\";\n  } else {\n    elm.style.bottom = layoutRect.bottom - triggerRect.bottom + \"px\";\n  }\n\n  DragDrop.instance.addGlass(function () {\n    return onHide();\n  });\n  DragDrop.instance.setGlassCursorOverride(\"default\");\n  layoutDiv.appendChild(elm);\n\n  var onHide = function onHide() {\n    layout.hidePortal();\n    DragDrop.instance.hideGlass();\n    layoutDiv.removeChild(elm);\n    elm.removeEventListener(\"mousedown\", onElementMouseDown);\n    currentDocument.removeEventListener(\"mousedown\", onDocMouseDown);\n  };\n\n  var onElementMouseDown = function onElementMouseDown(event) {\n    event.stopPropagation();\n  };\n\n  var onDocMouseDown = function onDocMouseDown(event) {\n    onHide();\n  };\n\n  elm.addEventListener(\"mousedown\", onElementMouseDown);\n  currentDocument.addEventListener(\"mousedown\", onDocMouseDown);\n  layout.showPortal(React.createElement(PopupMenu, {\n    currentDocument: currentDocument,\n    onSelect: onSelect,\n    onHide: onHide,\n    items: items,\n    classNameMapper: classNameMapper,\n    layout: layout,\n    iconFactory: iconFactory,\n    titleFactory: titleFactory\n  }), elm);\n}\n/** @internal */\n\nvar PopupMenu = function PopupMenu(props) {\n  var items = props.items,\n      onHide = props.onHide,\n      onSelect = props.onSelect,\n      classNameMapper = props.classNameMapper,\n      layout = props.layout,\n      iconFactory = props.iconFactory,\n      titleFactory = props.titleFactory;\n\n  var onItemClick = function onItemClick(item, event) {\n    onSelect(item);\n    onHide();\n    event.stopPropagation();\n  };\n\n  var itemElements = items.map(function (item, i) {\n    return React.createElement(\"div\", {\n      key: item.index,\n      className: classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU_ITEM),\n      \"data-layout-path\": \"/popup-menu/tb\" + i,\n      onClick: function onClick(event) {\n        return onItemClick(item, event);\n      },\n      title: item.node.getHelpText()\n    }, item.node.getModel().isLegacyOverflowMenu() ? item.node._getNameForOverflowMenu() : React.createElement(TabButtonStamp, {\n      node: item.node,\n      layout: layout,\n      iconFactory: iconFactory,\n      titleFactory: titleFactory\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU),\n    \"data-layout-path\": \"/popup-menu\"\n  }, itemElements);\n};","map":null,"metadata":{},"sourceType":"module"}