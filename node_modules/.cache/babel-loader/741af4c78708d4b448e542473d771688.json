{"ast":null,"code":"import { TabSetNode } from \"./TabSetNode\";\nimport { BorderNode } from \"./BorderNode\";\n/** @internal */\n\nexport function adjustSelectedIndexAfterFloat(node) {\n  var parent = node.getParent();\n\n  if (parent !== null) {\n    if (parent instanceof TabSetNode) {\n      var found = false;\n      var newSelected = 0;\n      var children = parent.getChildren();\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n\n        if (child === node) {\n          found = true;\n        } else {\n          if (!child.isFloating()) {\n            newSelected = i;\n            if (found) break;\n          }\n        }\n      }\n\n      parent._setSelected(newSelected);\n    } else if (parent instanceof BorderNode) {\n      parent._setSelected(-1);\n    }\n  }\n}\n/** @internal */\n\nexport function adjustSelectedIndexAfterDock(node) {\n  var parent = node.getParent();\n\n  if (parent !== null && (parent instanceof TabSetNode || parent instanceof BorderNode)) {\n    var children = parent.getChildren();\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child === node) {\n        parent._setSelected(i);\n\n        return;\n      }\n    }\n  }\n}\n/** @internal */\n\nexport function adjustSelectedIndex(parent, removedIndex) {\n  // for the tabset/border being removed from set the selected index\n  if (parent !== undefined && (parent.getType() === TabSetNode.TYPE || parent.getType() === BorderNode.TYPE)) {\n    var selectedIndex = parent.getSelected();\n\n    if (selectedIndex !== -1) {\n      if (removedIndex === selectedIndex && parent.getChildren().length > 0) {\n        if (removedIndex >= parent.getChildren().length) {\n          // removed last tab; select new last tab\n          parent._setSelected(parent.getChildren().length - 1);\n        } else {// leave selected index as is, selecting next tab after this one\n        }\n      } else if (removedIndex < selectedIndex) {\n        parent._setSelected(selectedIndex - 1);\n      } else if (removedIndex > selectedIndex) {// leave selected index as is\n      } else {\n        parent._setSelected(-1);\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}